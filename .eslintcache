[{"C:\\work\\hublance\\src\\index.js":"1","C:\\work\\hublance\\src\\features\\freelancers\\freelancersSlice.js":"2","C:\\work\\hublance\\src\\store\\store.js":"3","C:\\work\\hublance\\src\\serviceWorker.js":"4","C:\\work\\hublance\\src\\components\\app\\app.js":"5","C:\\work\\hublance\\src\\components\\header\\header.js":"6","C:\\work\\hublance\\src\\components\\App\\App.js":"7","C:\\work\\hublance\\src\\components\\Header\\Header.js":"8","C:\\work\\hublance\\src\\components\\Footer\\Footer.js":"9","C:\\work\\hublance\\src\\features\\Filter\\Filter.js":"10","C:\\work\\hublance\\src\\features\\Freelancers\\freelancersSlice.js":"11","C:\\work\\hublance\\src\\features\\Freelancers\\List.js":"12","C:\\work\\hublance\\src\\features\\Freelancers\\Single.js":"13","C:\\work\\hublance\\src\\components\\Slider\\Slider.js":"14","C:\\work\\hublance\\src\\features\\Freelancers\\_mockData.js":"15","C:\\work\\hublance\\src\\features\\Signup\\Form.js":"16","C:\\work\\hublance\\src\\features\\Signup\\Join.js":"17","C:\\work\\hublance\\src\\components\\Select\\Select.js":"18","C:\\work\\hublance\\src\\components\\Scroller\\Scroller.js":"19","C:\\work\\hublance\\src\\components\\Scroller\\useCustomScroller.js":"20","C:\\work\\hublance\\src\\components\\Input\\Input.js":"21","C:\\work\\hublance\\src\\components\\Certifications\\Certifications.js":"22","C:\\work\\hublance\\src\\components\\UserPic\\UserPic.js":"23","C:\\work\\hublance\\src\\components\\Modal\\Modal.js":"24","C:\\work\\hublance\\src\\components\\Label\\Label.js":"25","C:\\work\\hublance\\src\\components\\DatePicker\\DatePicker.js":"26","C:\\work\\hublance\\src\\components\\Button\\Button.js":"27","C:\\work\\hublance\\src\\components\\Carousel\\Carousel.js":"28","C:\\work\\hublance\\src\\store\\imageEditorSlice.js":"29","C:\\work\\hublance\\src\\store\\signupSlice.js":"30","C:\\work\\hublance\\src\\store\\profileSlice.js":"31","C:\\work\\hublance\\src\\features\\Profile\\Profile.js":"32","C:\\work\\hublance\\src\\features\\Profile\\ImageEditor\\ImageEditor.js":"33","C:\\work\\hublance\\src\\features\\Profile\\ImageEditor\\Modal.js":"34","C:\\work\\hublance\\src\\features\\Profile\\ImageEditor\\Canvas.js":"35","C:\\work\\hublance\\src\\features\\Profile\\Progress\\Progress.js":"36","C:\\work\\hublance\\src\\features\\Profile\\Progress\\Badge.js":"37","C:\\work\\hublance\\src\\features\\Profile\\Progress\\Squares.js":"38","C:\\work\\hublance\\src\\features\\Profile\\Title.js":"39","C:\\work\\hublance\\src\\features\\Profile\\AddCertificationModal.js":"40","C:\\work\\hublance\\src\\features\\Signup\\Step.js":"41"},{"size":695,"mtime":1616836980038,"results":"42","hashOfConfig":"43"},{"size":1200,"mtime":1612119028364,"results":"44","hashOfConfig":"45"},{"size":443,"mtime":1617017744737,"results":"46","hashOfConfig":"43"},{"size":5141,"mtime":1612106200507,"results":"47","hashOfConfig":"43"},{"size":547,"mtime":1612193939235,"results":"48","hashOfConfig":"45"},{"size":448,"mtime":1612191993828,"results":"49","hashOfConfig":"45"},{"size":618,"mtime":1612278431601,"results":"50","hashOfConfig":"43"},{"size":701,"mtime":1617017537037,"results":"51","hashOfConfig":"43"},{"size":728,"mtime":1612192485823,"results":"52","hashOfConfig":"43"},{"size":273,"mtime":1612271679456,"results":"53","hashOfConfig":"43"},{"size":1200,"mtime":1612119028364,"results":"54","hashOfConfig":"43"},{"size":1763,"mtime":1617018952437,"results":"55","hashOfConfig":"43"},{"size":1666,"mtime":1614877283892,"results":"56","hashOfConfig":"43"},{"size":1877,"mtime":1616084150449,"results":"57","hashOfConfig":"43"},{"size":1161,"mtime":1613621249594,"results":"58","hashOfConfig":"43"},{"size":2629,"mtime":1617033976056,"results":"59","hashOfConfig":"43"},{"size":562,"mtime":1617018142797,"results":"60","hashOfConfig":"43"},{"size":2066,"mtime":1616587287828,"results":"61","hashOfConfig":"43"},{"size":656,"mtime":1616672749057,"results":"62","hashOfConfig":"43"},{"size":3789,"mtime":1614879100884,"results":"63","hashOfConfig":"43"},{"size":831,"mtime":1617035474573,"results":"64","hashOfConfig":"43"},{"size":685,"mtime":1615930600325,"results":"65","hashOfConfig":"43"},{"size":377,"mtime":1616061257683,"results":"66","hashOfConfig":"43"},{"size":1096,"mtime":1615789458566,"results":"67","hashOfConfig":"43"},{"size":182,"mtime":1615760843123,"results":"68","hashOfConfig":"43"},{"size":307,"mtime":1615761818013,"results":"69","hashOfConfig":"43"},{"size":329,"mtime":1615762486706,"results":"70","hashOfConfig":"43"},{"size":1642,"mtime":1615930624366,"results":"71","hashOfConfig":"43"},{"size":1503,"mtime":1617017850884,"results":"72","hashOfConfig":"43"},{"size":573,"mtime":1617017865608,"results":"73","hashOfConfig":"43"},{"size":980,"mtime":1617017905089,"results":"74","hashOfConfig":"43"},{"size":4530,"mtime":1617018892358,"results":"75","hashOfConfig":"43"},{"size":1911,"mtime":1616870473163,"results":"76","hashOfConfig":"43"},{"size":3588,"mtime":1617018262040,"results":"77","hashOfConfig":"43"},{"size":7303,"mtime":1617018122623,"results":"78","hashOfConfig":"43"},{"size":1550,"mtime":1617034674219,"results":"79","hashOfConfig":"43"},{"size":1948,"mtime":1616670761660,"results":"80","hashOfConfig":"43"},{"size":9060,"mtime":1616683119560,"results":"81","hashOfConfig":"43"},{"size":775,"mtime":1617018178386,"results":"82","hashOfConfig":"43"},{"size":1780,"mtime":1617019087208,"results":"83","hashOfConfig":"43"},{"size":1197,"mtime":1617035672950,"results":"84","hashOfConfig":"43"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},"wy0fjx",{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jowo65",{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"87"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"87"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"87"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"87"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"87"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"87"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"87"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"87"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"87"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\work\\hublance\\src\\index.js",[],["178","179"],"C:\\work\\hublance\\src\\features\\freelancers\\freelancersSlice.js",[],"C:\\work\\hublance\\src\\store\\store.js",[],"C:\\work\\hublance\\src\\serviceWorker.js",[],"C:\\work\\hublance\\src\\components\\app\\app.js",[],["180","181"],"C:\\work\\hublance\\src\\components\\header\\header.js",[],"C:\\work\\hublance\\src\\components\\App\\App.js",[],"C:\\work\\hublance\\src\\components\\Header\\Header.js",[],"C:\\work\\hublance\\src\\components\\Footer\\Footer.js",[],"C:\\work\\hublance\\src\\features\\Filter\\Filter.js",[],"C:\\work\\hublance\\src\\features\\Freelancers\\freelancersSlice.js",[],"C:\\work\\hublance\\src\\features\\Freelancers\\List.js",["182"],"import {useSelector} from 'react-redux'\r\nimport style from './List.module.css'\r\n\r\nimport Single from './Single'\r\nimport Scroller from '@components/Scroller/Scroller'\r\n\r\nimport Join from '@features/Signup/Join'\r\nimport Form from '@features/Signup/Form'\r\nimport Profile from '@features/Profile'\r\n\r\nimport {freelancers} from './_mockData'\r\n\r\nconst List = () => {\r\n  const signupStarted = useSelector(store => store.signup.started)\r\n  const signedUp = useSelector(store => store.signup.submitted)\r\n  const signupVisible = useSelector(store => store.signup.visible)\r\n  return(\r\n    <div className={style.wrap}>\r\n      <div className={style.header}>\r\n        <span>Photo</span>\r\n        <span>Title</span>\r\n        <span>Name</span>\r\n        <span>Hourly rate</span>\r\n        <span>Country</span>\r\n      </div>\r\n\r\n      <div className={style.body}>\r\n        <ul className={style.list}>\r\n          {signupVisible ?\r\n            signedUp ?\r\n              <li>\r\n                <Profile/>\r\n              </li>\r\n            :\r\n            signupStarted ?\r\n              <Form/>\r\n            :\r\n            <li className={style.row}>\r\n              <Join/>\r\n            </li>\r\n          : null\r\n          }\r\n\r\n          {freelancers.map(freelancer => <li key={freelancer.id} className={style.row}><Single data={freelancer}/></li>)}\r\n          {freelancers.map(freelancer => <li key={freelancer.id} className={style.row}><Single data={freelancer}/></li>)}\r\n          {freelancers.map(freelancer => <li key={freelancer.id} className={style.row}><Single data={freelancer}/></li>)}\r\n          {freelancers.map(freelancer => <li key={freelancer.id} className={style.row}><Single data={freelancer}/></li>)}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default List\r\n","C:\\work\\hublance\\src\\features\\Freelancers\\Single.js",[],"C:\\work\\hublance\\src\\components\\Slider\\Slider.js",["183","184"],"import {useState, useEffect, useRef, useMemo} from 'react'\r\nimport style from './Slider.module.css'\r\n\r\nconst Slider = ({title, filled, onChange, className}) => {\r\n  const line = useRef({})\r\n  const [dragging, setDragging] = useState(false)\r\n  const [rect, setRect] = useState(null)\r\n\r\n  useEffect(() => {\r\n    setRect(line.current.getBoundingClientRect())\r\n  },[])\r\n\r\n  const position = useMemo(() => {\r\n    const {width} = rect || 0\r\n    return filled * width\r\n  }, [rect, filled])\r\n\r\n  const dragStart = (e) => {\r\n    e.preventDefault()\r\n    setDragging(true)\r\n    setRect(line.current.getBoundingClientRect())\r\n    document.addEventListener('mousemove', drag)\r\n    document.addEventListener('mouseup', dragEnd)\r\n  }\r\n  const drag = (e) => {\r\n    if (!dragging) {\r\n      return\r\n    }\r\n    if (typeof onChange === 'function') {\r\n      const addFilled = e.movementX/rect.width\r\n      onChange(Math.min(Math.max(0, filled + addFilled), 1))\r\n    }\r\n  }\r\n  const dragEnd = () => {\r\n    if (!dragging) {\r\n      return\r\n    }\r\n    setDragging(dragging => dragging = false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('mousemove', drag)\r\n    document.addEventListener('mouseup', dragEnd)\r\n    document.addEventListener('mouseleave', dragEnd)\r\n    return () => {\r\n      document.removeEventListener('mousemove', drag)\r\n      document.removeEventListener('mouseup', dragEnd)\r\n      document.removeEventListener('mouseleave', dragEnd)\r\n    }\r\n  }, [dragging, drag, dragEnd])\r\n\r\n  return(\r\n    <div className={className}>\r\n      <span className={style.title}>{title}</span>\r\n      <div ref={line} className={style.line}>\r\n        <div className={style.filled} style={{width: `${filled * 100}%`}}/>\r\n        <div className={style.caret} onMouseDown={dragStart} style={{transform: `translateX(${position}px)`}}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Slider\r\n","C:\\work\\hublance\\src\\features\\Freelancers\\_mockData.js",[],"C:\\work\\hublance\\src\\features\\Signup\\Form.js",[],"C:\\work\\hublance\\src\\features\\Signup\\Join.js",[],"C:\\work\\hublance\\src\\components\\Select\\Select.js",["185"],"import {useState, useRef, useEffect} from 'react'\r\nimport style from './Select.module.css'\r\n\r\nimport Scroller from '../Scroller/Scroller'\r\n\r\nconst Select = ({searchable = false, placeholder, options, height = 200, value, onChange, className, ...props}) => {\r\n  const [open, setOpen] = useState(false)\r\n  const [search, setSearch] = useState('')\r\n  const wrap = useRef(null)\r\n  const input = useRef(null)\r\n\r\n  const handleClick = () => {\r\n    if (open) {\r\n      return\r\n    }\r\n    setOpen(true)\r\n    if (input && input.current) {\r\n      input.current.focus()\r\n    }\r\n    window.addEventListener('mousedown', handleBlur)\r\n  }\r\n\r\n  const handleBlur = (e) => {\r\n    if (wrap && wrap.current && wrap.current.contains(e.target)) {\r\n      return\r\n    }\r\n    setOpen(false)\r\n    window.removeEventListener('mousedown', handleBlur)\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => window.removeEventListener('mousedown', handleBlur)\r\n  }, [])\r\n\r\n  return(\r\n    <div ref={wrap} className={`${style.wrap} ${className ? className : ''}`} onClick={handleClick} {...props}>\r\n\r\n      <span className={value ? style.value : style.placeholder}>{value ? options.find(option => option.value === value).label : placeholder}</span>\r\n      <input type='hidden' value={value}/>\r\n\r\n      {open ?\r\n        <div className={style.options}>\r\n\r\n          {searchable ?\r\n            <input ref={input} className={style.search} type='text' value={search} placeholder={placeholder} onChange={(e) => setSearch(e.target.value)}/>\r\n          : null}\r\n\r\n          <Scroller maxHeight={height} scrollbarStyle={{right: 3}}>\r\n            {options.reduce((result, option) => {\r\n              if (option.label.toLowerCase().indexOf(search.toLowerCase()) === 0) {\r\n                result.push(\r\n                  <div className={style.option} key={option.value} onClick={() => onChange(option.value)}>{option.label}</div>\r\n                )\r\n              }\r\n                return result\r\n            },[])}\r\n          </Scroller>\r\n        </div>\r\n      : null}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Select\r\n","C:\\work\\hublance\\src\\components\\Scroller\\Scroller.js",[],"C:\\work\\hublance\\src\\components\\Scroller\\useCustomScroller.js",[],"C:\\work\\hublance\\src\\components\\Input\\Input.js",[],"C:\\work\\hublance\\src\\components\\Certifications\\Certifications.js",[],"C:\\work\\hublance\\src\\components\\UserPic\\UserPic.js",[],"C:\\work\\hublance\\src\\components\\Modal\\Modal.js",["186"],"import {useEffect} from 'react'\r\nimport {Portal} from 'react-portal'\r\n\r\nimport style from './Modal.module.css'\r\n\r\nconst Modal = ({title, children, close}) => {\r\n  useEffect(() => {\r\n    const handleKeypress = (e) => {\r\n      if (e.key === 'Escape') {\r\n        close()\r\n      }\r\n    }\r\n    const preventScroll = (e) => {\r\n      e.preventDefault()\r\n    }\r\n    window.addEventListener('keydown', handleKeypress)\r\n    document.body.addEventListener('wheel', preventScroll, {passive: false})\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeypress)\r\n      document.body.removeEventListener('wheel', preventScroll)\r\n    }\r\n  }, [])\r\n  return(\r\n    <Portal>\r\n      <div className={style.background} onClick={close}/>\r\n      <div className={style.modal}>\r\n        {title ?\r\n          <header className={style.header}>\r\n            <h2 className={style.title}>{title}</h2>\r\n          </header>\r\n        : null}\r\n        <button type='button' className={style.close} onClick={close}>Close</button>\r\n        {children}\r\n      </div>\r\n    </Portal>\r\n  )\r\n}\r\n\r\nexport default Modal\r\n","C:\\work\\hublance\\src\\components\\Label\\Label.js",[],"C:\\work\\hublance\\src\\components\\DatePicker\\DatePicker.js",[],"C:\\work\\hublance\\src\\components\\Button\\Button.js",[],"C:\\work\\hublance\\src\\components\\Carousel\\Carousel.js",[],"C:\\work\\hublance\\src\\store\\imageEditorSlice.js",[],"C:\\work\\hublance\\src\\store\\signupSlice.js",[],"C:\\work\\hublance\\src\\store\\profileSlice.js",[],"C:\\work\\hublance\\src\\features\\Profile\\Profile.js",["187","188","189"],"import {useState, useEffect} from 'react'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n\r\nimport {setName, setRate, setEmail, setAbout, setCountry, setPhotoUrl, addCertification} from '@store/profileSlice'\r\nimport {hide} from '@store/signupSlice'\r\n\r\nimport style from './Profile.module.css'\r\n\r\nimport Select from '@components/Select/Select'\r\nimport Input from '@components/Input/Input'\r\nimport Label from '@components/Label/Label'\r\nimport Button from '@components/Button/Button'\r\nimport Certifications from '@components/Certifications/Certifications'\r\nimport ImageEditor from './ImageEditor'\r\nimport Progress from './Progress'\r\nimport Title from './Title'\r\nimport AddCertificationModal from './AddCertificationModal'\r\n\r\nconst getRates = () => {\r\n  let rates = []\r\n  for (var i=1; i<21; i++) {\r\n    rates.push({\r\n      value: i*5,\r\n      label: `$${i*5}`\r\n    })\r\n  }\r\n  return rates\r\n}\r\n\r\nconst Profile = () => {\r\n  const [expanded, setExpanded] = useState(false)\r\n  const [countries, setCountries] = useState([])\r\n  const [certificationsModal, setCertificationsModal] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n  const name = useSelector(store => store.profile.name)\r\n  const rate = useSelector(store => store.profile.rate)\r\n  const email = useSelector(store => store.profile.email)\r\n  const about = useSelector(store => store.profile.about)\r\n  const country = useSelector(store => store.profile.country)\r\n  const photoUrl = useSelector(store => store.profile.photoUrl)\r\n  const certifications = useSelector(store => store.profile.certifications)\r\n\r\n  useEffect(() => {\r\n    async function fetchCountries() {\r\n      const res = await fetch(`https://restcountries.eu/rest/v2/all?fields=name`)\r\n      const json = await res.json()\r\n      setCountries(json.map(item => ({\r\n        value: item.name,\r\n        label: item.name\r\n      })))\r\n    }\r\n\r\n    fetchCountries()\r\n  }, [])\r\n  return(\r\n    <div className={style.wrap}>\r\n      <Progress/>\r\n\r\n      <form className={style.form}>\r\n        <div className={style.photoGroup}>\r\n          <ImageEditor url={photoUrl} save={(value) => dispatch(setPhotoUrl(value))}/>\r\n        </div>\r\n\r\n        <Title/>\r\n\r\n        <Input className={style.name} type='text' name='name' placeholder='Name' defaultValue={name} onSubmit={(value) => dispatch(setName(value))}/>\r\n\r\n        <Select className={style.rate} name='rate' placeholder='Rate' options={getRates()} value={rate} onChange={(value) => dispatch(setRate(value))}/>\r\n\r\n        <Select className={style.country} name='country' placeholder='Country' options={countries} value={country} onChange={(value) => dispatch(setCountry(value))} searchable/>\r\n\r\n        <label htmlFor='about' className={style.label}>About:</label>\r\n        <Input\r\n          name='about'\r\n          textarea={true}\r\n          placeholder='Please share more details about your expertise...'\r\n          className={style.about}\r\n          style={{minHeight: 187}}\r\n          defaultValue={about}\r\n          onSubmit={(value) => dispatch(setAbout(value))}\r\n        />\r\n\r\n        <span className={style.label}>\r\n          Certifications ({certifications.length}):\r\n        </span>\r\n        <div className={style.certificationsWrap}>\r\n          <div className={style.certifications}>\r\n            <button type='button' className={style.btnAddCert} onClick={() => setCertificationsModal(true)}>Add certification</button>\r\n            <div>\r\n              <Certifications list={certifications} slidesToShow={2}/>\r\n            </div>\r\n            {certificationsModal ?\r\n              <AddCertificationModal close={() => setCertificationsModal(false)} add={() => dispatch(addCertification())}/>\r\n            : null}\r\n          </div>\r\n        </div>\r\n\r\n        <label className={style.label} htmlFor='email' style={{marginTop: '5px'}}>Contact:</label>\r\n        <Input className={style.contact} type='email' name='email' placeholder='Email' defaultValue={email} onSubmit={(value) => dispatch(setEmail(value))}/>\r\n\r\n        <Button className={style.btnClose} onClick={() => dispatch(hide())}>Close</Button>\r\n        <Button className={style.btnSave} primary>Save profile</Button>\r\n\r\n        {/* <button\r\n          className={style.buttonExpand}\r\n          aria-label='expand'\r\n          onMouseDown={(e) => e.preventDefault()}\r\n          onClick={() => setExpanded(!expanded)}\r\n          style={expanded ? {transform: 'rotate(180deg)'} : {}}\r\n          >\r\n          Expand\r\n        </button> */}\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile\r\n","C:\\work\\hublance\\src\\features\\Profile\\ImageEditor\\ImageEditor.js",["190","191"],"import {useState, useEffect} from 'react'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n\r\nimport {open, setWarning, setUrl, setCropping, setZoomAmount, setRotation, setImgData} from '@store/imageEditorSlice'\r\n\r\nimport style from './ImageEditor.module.css'\r\n\r\nimport UserPic from '@components/UserPic/UserPic'\r\nimport Modal from './Modal'\r\n\r\nconst [canvasWidth, canvasHeight, radius] = [704, 260, 110]\r\n\r\nconst UploadPic = () => {\r\n  const [img, setImg] = useState(null)\r\n  const dispatch = useDispatch()\r\n  const photoUrl = useSelector(store => store.signup.photoUrl)\r\n  const isOpen = useSelector(store => store.imageEditor.isOpen)\r\n  const url = useSelector(store => store.imageEditor.url)\r\n\r\n  useEffect(() => {\r\n    if (!url && photoUrl) {\r\n      dispatch(setUrl(photoUrl))\r\n    }\r\n  }, [photoUrl])\r\n\r\n  useEffect(() => {\r\n    const image = new Image()\r\n    image.onload = () => {\r\n      if (image.width < 220 || image.height < 220) {\r\n        dispatch(setWarning('Image is too small'))\r\n        return\r\n      }\r\n      const {width, height} = image\r\n      const ratio = radius*2/Math.min(width, height)\r\n      const dWidth = width*ratio\r\n      const dHeight = height*ratio\r\n      const dx = (canvasWidth - dWidth)/2\r\n      const dy = (canvasHeight - dHeight)/2\r\n      dispatch(setImgData({dx, dy, dWidth, dHeight, aspectRatio: width/height}))\r\n      setImg(image)\r\n      dispatch(setWarning(''))\r\n      dispatch(setCropping(true))\r\n      dispatch(setZoomAmount(0))\r\n      dispatch(setRotation(0.5))\r\n    }\r\n    image.src = url\r\n  }, [url])\r\n\r\n  return(\r\n    <div className={style.wrap}>\r\n      <button type='button' className={style.edit} onMouseDown={(e) => e.preventDefault()} onClick={() => dispatch(open())} aria-label='Edit photo'>\r\n        <UserPic url={photoUrl}/>\r\n      </button>\r\n      {isOpen ?\r\n        <Modal img={img}/>\r\n      : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UploadPic\r\n","C:\\work\\hublance\\src\\features\\Profile\\ImageEditor\\Modal.js",["192","193"],"import {useState, useRef, useEffect} from 'react'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n\r\nimport {close, setUrl, setCropping, setWarning, setDraggingFile} from '@store/imageEditorSlice'\r\nimport {setPhotoUrl} from '@store/profileSlice'\r\n\r\nimport style from './Modal.module.css'\r\n\r\nimport Modal from '@components/Modal/Modal'\r\nimport Button from '@components/Button/Button'\r\nimport Canvas from './Canvas'\r\n\r\nconst accept = ['image/jpeg', 'image/jpg', 'image/png']\r\n\r\nconst UserPicModal = ({img}) => {\r\n  const uploader = useRef(null)\r\n  const canvas = useRef(null)\r\n\r\n  const dispatch = useDispatch()\r\n  const url = useSelector(store => store.imageEditor.url)\r\n  const warning = useSelector(store => store.imageEditor.warning)\r\n  const cropping = useSelector(store => store.imageEditor.cropping)\r\n  const draggingFile = useSelector(store => store.imageEditor.draggingFile)\r\n\r\n  const triggerUpload = () => {\r\n    if (uploader && uploader.current) {\r\n      uploader.current.click()\r\n    }\r\n  }\r\n\r\n  const handleUpload = (e) => {\r\n    const file = e.target.files[0]\r\n    if (!(file instanceof File) || !accept.includes(file.type)) {\r\n      dispatch(setWarning('Wrong file type'))\r\n      return\r\n    }\r\n    if (file.size > 1024*1024*5) {\r\n      dispatch(setWarning('File size is too large'))\r\n      return\r\n    }\r\n    const newUrl = URL.createObjectURL(file)\r\n    dispatch(setUrl(newUrl))\r\n    e.target.value = null\r\n    dispatch(setDraggingFile(false))\r\n  }\r\n\r\n  const saveCrop = () => {\r\n    if (!url) {\r\n      dispatch(close())\r\n      return\r\n    }\r\n    canvas.current.saveCrop()\r\n  }\r\n\r\n  const deletePic = () => {\r\n    dispatch(setPhotoUrl(''))\r\n    dispatch(setUrl(''))\r\n    dispatch(setCropping(false))\r\n  }\r\n\r\n  return(\r\n    <Modal close={() => dispatch(close())} title='Edit Photo'>\r\n      <div className={style.body} onDragEnter={() => dispatch(setDraggingFile(true))}>\r\n        <Canvas ref={canvas} img={img}/>\r\n        {!cropping ?\r\n          <p className={style.limits}>JPEG/PNG, at least 220x220 pixels and not larger than 5Mb</p>\r\n        :null}\r\n        {!!warning ?\r\n          <p className={style.warning}>{warning}</p>\r\n        :null}\r\n        <div className={style.overlay}/>\r\n        <div className={`${style.circle} ${cropping ? style.cropping : ''}`}/>\r\n        <input\r\n          type='file'\r\n          accept='image/png, image/jpeg'\r\n          name='profile-pic'\r\n          ref={uploader}\r\n          className={style.uploader}\r\n          onDragOver={() => dispatch(setDraggingFile(true))}\r\n          onDragLeave={() => dispatch(setDraggingFile(false))}\r\n          onChange={handleUpload}\r\n          style={{pointerEvents: draggingFile ? 'all' : 'none'}}\r\n        />\r\n      </div>\r\n      <div className={style.footer}>\r\n        <div className={style.controls}>\r\n          <button type='button' className={`${style.button} ${cropping ? style.active : ''}`} disabled={!url} onClick={() => dispatch(setCropping(!cropping))}>\r\n            <span className={style.iconCrop}/>\r\n            <span>Crop</span>\r\n          </button>\r\n\r\n          <button type='button' className={style.button} onClick={triggerUpload}>\r\n            <span className={style.iconCamera}/>\r\n            <span>Add Photo</span>\r\n          </button>\r\n\r\n          <button type='button' className={style.button} disabled={!url} onClick={deletePic}>\r\n            <span className={style.iconBin}/>\r\n            <span>Delete</span>\r\n          </button>\r\n        </div>\r\n        <Button primary onClick={saveCrop}>Save</Button>\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default UserPicModal\r\n","C:\\work\\hublance\\src\\features\\Profile\\ImageEditor\\Canvas.js",["194","195"],"import {forwardRef, useImperativeHandle, useState, useRef, useEffect} from 'react'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n\r\nimport {setZoomAmount, setRotation, setImgData, setDragging, setDragStartPos, close} from '@store/imageEditorSlice'\r\nimport {setPhotoUrl} from '@store/profileSlice'\r\n\r\nimport Slider from '@components/Slider/Slider'\r\n\r\nimport style from './Canvas.module.css'\r\n\r\nconst radius = 110 //round pic radius after crop\r\n\r\nconst Canvas = forwardRef(({img}, ref) => {\r\n  const canvas = useRef(null)\r\n\r\n  const dispatch = useDispatch()\r\n  const {imgData, cropping} = useSelector(store => store.imageEditor)\r\n  const {dragging, dragStartPos, zoomAmount, rotation} = useSelector(store => store.imageEditor.canvas)\r\n\r\n  useEffect(() => {\r\n    if (!canvas || !canvas.current) {\r\n      return\r\n    }\r\n    if (!img) {\r\n      const ctx = canvas.current.getContext('2d')\r\n      ctx.clearRect(0, 0, canvas.current.width, canvas.current.height)\r\n      canvas.current.style.cursor = null\r\n      return\r\n    }\r\n\r\n    const ctx = canvas.current.getContext('2d')\r\n    const {dx, dy, dWidth, dHeight} = imgData\r\n    ctx.clearRect(0, 0, canvas.current.width, canvas.current.height)\r\n    ctx.translate(canvas.current.width/2, canvas.current.height/2)\r\n    ctx.rotate(Math.PI/2*(rotation-0.5))\r\n    ctx.translate(canvas.current.width/-2, canvas.current.height/-2)\r\n    ctx.drawImage(img, dx, dy, dWidth, dHeight)\r\n    ctx.resetTransform()\r\n\r\n    canvas.current.style.cursor = 'pointer'\r\n  }, [img])\r\n\r\n  const handleWheel = (e) => {\r\n    if (!img || !cropping) {\r\n      return\r\n    }\r\n    const increment = e.deltaY > 0 ? 0.05 : -0.05\r\n    zoom(zoomAmount + increment)\r\n  }\r\n\r\n  const zoom = (amount) => {\r\n    const {width, height} = img\r\n    const min = radius * 2\r\n    const max = Math.min(width, height)\r\n    if (min === max) {\r\n      return\r\n    }\r\n    amount = Math.min(Math.max(amount, 0), 1)\r\n    dispatch(setZoomAmount(amount))\r\n    const ctx = canvas.current.getContext('2d')\r\n    if (!img) {\r\n      return\r\n    }\r\n\r\n    let {dx, dy, dWidth, dHeight, aspectRatio} = imgData\r\n    const diff = max - min\r\n    let newWidth, newHeight\r\n    if (aspectRatio < 1) {\r\n      newWidth = min + diff*amount\r\n      newHeight = (min + diff*amount)/aspectRatio\r\n    } else {\r\n      newWidth = (min + diff*amount)*aspectRatio\r\n      newHeight = min + diff*amount\r\n    }\r\n\r\n    dx -= (newWidth - dWidth)/2\r\n    dy -= (newHeight - dHeight)/2\r\n\r\n    if (dx > canvas.current.width/2 - radius) {\r\n      dx = canvas.current.width/2 - radius\r\n    } else if (dx < canvas.current.width/2 + radius - newWidth) {\r\n      dx = canvas.current.width/2 + radius - newWidth\r\n    }\r\n    if (dy > canvas.current.height/2 - radius) {\r\n      dy = canvas.current.height/2 - radius\r\n    } else if (dy < canvas.current.height/2 + radius - newHeight) {\r\n      dy = canvas.current.height/2 + radius - newHeight\r\n    }\r\n    dWidth = newWidth\r\n    dHeight = newHeight\r\n    ctx.clearRect(0, 0, canvas.current.width, canvas.current.height)\r\n    ctx.translate(canvas.current.width/2, canvas.current.height/2)\r\n    ctx.rotate(Math.PI/2*(rotation-0.5))\r\n    ctx.translate(canvas.current.width/-2, canvas.current.height/-2)\r\n    ctx.drawImage(img, dx, dy, dWidth, dHeight)\r\n    ctx.resetTransform()\r\n\r\n    dispatch(setImgData({dx, dy, dWidth, dHeight}))\r\n  }\r\n\r\n  const rotate = (amount) => {\r\n    dispatch(setRotation(amount))\r\n    const {dx, dy, dWidth, dHeight} = imgData\r\n    const ctx = canvas.current.getContext('2d')\r\n    ctx.clearRect(0, 0, canvas.current.width, canvas.current.height)\r\n    ctx.translate(canvas.current.width/2, canvas.current.height/2)\r\n    ctx.rotate(Math.PI/2*(rotation-0.5))\r\n    ctx.translate(canvas.current.width/-2, canvas.current.height/-2)\r\n    ctx.drawImage(img, dx, dy, dWidth, dHeight)\r\n    ctx.resetTransform()\r\n  }\r\n\r\n  const dragStart = (e) => {\r\n    if (!img || !cropping) {\r\n      return\r\n    }\r\n    const {dx, dy, dWidth, dHeight} = imgData\r\n    const rect = canvas.current.getBoundingClientRect()\r\n    const x = e.clientX - rect.left\r\n    const y = e.clientY - rect.top\r\n    if (\r\n      x < dx || x > dx + dWidth ||\r\n      y < dy || y > dy + dHeight\r\n    ) {\r\n      return\r\n    }\r\n    dispatch(setDragStartPos({x: e.clientX, y: e.clientY}))\r\n    dispatch(setDragging(true))\r\n  }\r\n\r\n  const drag = (e) => {\r\n    e.preventDefault()\r\n    if (!dragging) {\r\n      return\r\n    }\r\n    let {dx, dy, dWidth, dHeight} = imgData\r\n    const diffX = dragStartPos.x - e.clientX\r\n    const diffY = dragStartPos.y - e.clientY\r\n    const ctx = canvas.current.getContext('2d')\r\n    dx -= diffX\r\n    dy -= diffY\r\n    if (dx > canvas.current.width/2 - radius) {\r\n      dx = canvas.current.width/2 - radius\r\n    } else if (dx < canvas.current.width/2 + radius - dWidth) {\r\n      dx = canvas.current.width/2 + radius - dWidth\r\n    }\r\n    if (dy > canvas.current.height/2 - radius) {\r\n      dy = canvas.current.height/2 - radius\r\n    } else if (dy < canvas.current.height/2 + radius - dHeight) {\r\n      dy = canvas.current.height/2 + radius - dHeight\r\n    }\r\n    ctx.clearRect(0, 0, canvas.current.width, canvas.current.height)\r\n    ctx.translate(canvas.current.width/2, canvas.current.height/2)\r\n    ctx.rotate(Math.PI/2*(rotation-0.5))\r\n    ctx.translate(canvas.current.width/-2, canvas.current.height/-2)\r\n    ctx.drawImage(img, dx, dy, dWidth, dHeight)\r\n    ctx.resetTransform()\r\n  }\r\n\r\n  const dragEnd = (e) => {\r\n    e.preventDefault()\r\n    if (!dragging) {\r\n      return\r\n    }\r\n    dispatch(setDragging(false))\r\n    let {dx, dy, dWidth, dHeight, aspectRatio} = imgData\r\n    const diffX = dragStartPos.x - e.clientX\r\n    const diffY = dragStartPos.y - e.clientY\r\n    dx -= diffX\r\n    dy -= diffY\r\n    if (dx > canvas.current.width/2 - radius) {\r\n      dx = canvas.current.width/2 - radius\r\n    } else if (dx < canvas.current.width/2 + radius - dWidth) {\r\n      dx = canvas.current.width/2 + radius - dWidth\r\n    }\r\n    if (dy > canvas.current.height/2 - radius) {\r\n      dy = canvas.current.height/2 - radius\r\n    } else if (dy < canvas.current.height/2 + radius - dHeight) {\r\n      dy = canvas.current.height/2 + radius - dHeight\r\n    }\r\n    dispatch(setImgData({dx, dy, dWidth, dHeight, aspectRatio}))\r\n  }\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    saveCrop: async () => {\r\n      const offscreen = new OffscreenCanvas(radius*2, radius*2)\r\n      const octx = offscreen.getContext('2d')\r\n      const sx = canvas.current.width/2 - radius\r\n      const sy = canvas.current.height/2 - radius\r\n\r\n      octx.drawImage(canvas.current, sx, sy, radius*2, radius*2, 0, 0, radius*2, radius*2)\r\n      const blob = await offscreen.convertToBlob()\r\n      const objectUrl = URL.createObjectURL(blob)\r\n      dispatch(setPhotoUrl(objectUrl))\r\n      dispatch(close())\r\n    }\r\n  }))\r\n\r\n  return(\r\n    <>\r\n      <canvas ref={canvas} width={704} height={260} onWheel={handleWheel} onMouseDown={dragStart} onMouseMove={drag} onMouseUp={dragEnd} onMouseLeave={dragEnd}/>\r\n      {cropping ?\r\n        <div className={style.controls}>\r\n          <p className={style.instruction}>Drag to reposition photo</p>\r\n          <Slider title='Zoom' onChange={zoom} filled={zoomAmount}/>\r\n          <Slider title='Straighten' onChange={rotate} filled={rotation}/>\r\n        </div>\r\n      : null}\r\n    </>\r\n  )\r\n})\r\n\r\nexport default Canvas\r\n","C:\\work\\hublance\\src\\features\\Profile\\Progress\\Progress.js",[],"C:\\work\\hublance\\src\\features\\Profile\\Progress\\Badge.js",[],"C:\\work\\hublance\\src\\features\\Profile\\Progress\\Squares.js",[],"C:\\work\\hublance\\src\\features\\Profile\\Title.js",["196","197","198"],"import {useRef, useState} from 'react'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n\r\nimport {setJob} from '@store/profileSlice'\r\n\r\nimport style from './Title.module.css'\r\n\r\nconst Title = () => {\r\n  const input = useRef(null)\r\n  const [focus, setFocus] = useState(false)\r\n  const dispatch = useDispatch()\r\n  const job = useSelector(store => store.profile.job)\r\n\r\n  return(\r\n    <div className={style.wrap}>\r\n      <textarea\r\n        name='job'\r\n        placeholder='Type job title...'\r\n        className={style.title}\r\n        onChange={(e) => dispatch(setJob(e.target.value))}\r\n        rows={1}\r\n        value={job}\r\n      />\r\n      <div className={style.stretch} aria-hidden='true'>\r\n        {`${job} `}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Title\r\n","C:\\work\\hublance\\src\\features\\Profile\\AddCertificationModal.js",[],"C:\\work\\hublance\\src\\features\\Signup\\Step.js",[],{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","replacedBy":"202"},{"ruleId":"199","replacedBy":"203"},{"ruleId":"201","replacedBy":"204"},{"ruleId":"205","severity":1,"message":"206","line":5,"column":8,"nodeType":"207","messageId":"208","endLine":5,"endColumn":16},{"ruleId":"209","severity":1,"message":"210","line":25,"column":9,"nodeType":"211","endLine":33,"endColumn":4,"suggestions":"212"},{"ruleId":"209","severity":1,"message":"213","line":34,"column":9,"nodeType":"211","endLine":39,"endColumn":4,"suggestions":"214"},{"ruleId":"209","severity":1,"message":"215","line":33,"column":6,"nodeType":"216","endLine":33,"endColumn":8,"suggestions":"217"},{"ruleId":"209","severity":1,"message":"218","line":23,"column":6,"nodeType":"216","endLine":23,"endColumn":8,"suggestions":"219"},{"ruleId":"205","severity":1,"message":"220","line":11,"column":8,"nodeType":"207","messageId":"208","endLine":11,"endColumn":13},{"ruleId":"205","severity":1,"message":"221","line":31,"column":10,"nodeType":"207","messageId":"208","endLine":31,"endColumn":18},{"ruleId":"205","severity":1,"message":"222","line":31,"column":20,"nodeType":"207","messageId":"208","endLine":31,"endColumn":31},{"ruleId":"209","severity":1,"message":"223","line":24,"column":6,"nodeType":"216","endLine":24,"endColumn":16,"suggestions":"224"},{"ruleId":"209","severity":1,"message":"225","line":47,"column":6,"nodeType":"216","endLine":47,"endColumn":11,"suggestions":"226"},{"ruleId":"205","severity":1,"message":"227","line":1,"column":9,"nodeType":"207","messageId":"208","endLine":1,"endColumn":17},{"ruleId":"205","severity":1,"message":"228","line":1,"column":27,"nodeType":"207","messageId":"208","endLine":1,"endColumn":36},{"ruleId":"205","severity":1,"message":"227","line":1,"column":42,"nodeType":"207","messageId":"208","endLine":1,"endColumn":50},{"ruleId":"209","severity":1,"message":"229","line":41,"column":6,"nodeType":"216","endLine":41,"endColumn":11,"suggestions":"230"},{"ruleId":"205","severity":1,"message":"231","line":9,"column":9,"nodeType":"207","messageId":"208","endLine":9,"endColumn":14},{"ruleId":"205","severity":1,"message":"232","line":10,"column":10,"nodeType":"207","messageId":"208","endLine":10,"endColumn":15},{"ruleId":"205","severity":1,"message":"233","line":10,"column":17,"nodeType":"207","messageId":"208","endLine":10,"endColumn":25},"no-native-reassign",["234"],"no-negated-in-lhs",["235"],["234"],["235"],"no-unused-vars","'Scroller' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","The 'drag' function makes the dependencies of useEffect Hook (at line 50) change on every render. To fix this, wrap the definition of 'drag' in its own useCallback() Hook.","VariableDeclarator",["236"],"The 'dragEnd' function makes the dependencies of useEffect Hook (at line 50) change on every render. To fix this, wrap the definition of 'dragEnd' in its own useCallback() Hook.",["237"],"React Hook useEffect has a missing dependency: 'handleBlur'. Either include it or remove the dependency array.","ArrayExpression",["238"],"React Hook useEffect has a missing dependency: 'close'. Either include it or remove the dependency array. If 'close' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["239"],"'Label' is defined but never used.","'expanded' is assigned a value but never used.","'setExpanded' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'url'. Either include them or remove the dependency array.",["240"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["241"],"'useState' is defined but never used.","'useEffect' is defined but never used.","React Hook useEffect has missing dependencies: 'imgData' and 'rotation'. Either include them or remove the dependency array.",["242"],"'input' is assigned a value but never used.","'focus' is assigned a value but never used.","'setFocus' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},"Wrap the definition of 'drag' in its own useCallback() Hook.",{"range":"257","text":"258"},"Wrap the definition of 'dragEnd' in its own useCallback() Hook.",{"range":"259","text":"260"},"Update the dependencies array to be: [handleBlur]",{"range":"261","text":"262"},"Update the dependencies array to be: [close]",{"range":"263","text":"264"},"Update the dependencies array to be: [dispatch, photoUrl, url]",{"range":"265","text":"266"},"Update the dependencies array to be: [dispatch, url]",{"range":"267","text":"268"},"Update the dependencies array to be: [img, imgData, rotation]",{"range":"269","text":"270"},[735,951],"useCallback((e) => {\r\n    if (!dragging) {\r\n      return\r\n    }\r\n    if (typeof onChange === 'function') {\r\n      const addFilled = e.movementX/rect.width\r\n      onChange(Math.min(Math.max(0, filled + addFilled), 1))\r\n    }\r\n  })",[971,1073],"useCallback(() => {\r\n    if (!dragging) {\r\n      return\r\n    }\r\n    setDragging(dragging => dragging = false)\r\n  })",[927,929],"[handleBlur]",[648,650],"[close]",[800,810],"[dispatch, photoUrl, url]",[1546,1551],"[dispatch, url]",[1502,1507],"[img, imgData, rotation]"]